version: '3.8'

services:

  order-service:
    container_name: order-service
    image: ahmedbaz/order-service:1.0
    depends_on:
      - postgres
      - keycloak
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5433/order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:9696/realms/order-service
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://keycloak:9696/realms/order-service/protocol/openid-connect/certs
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "8081:8081"
    networks:
      - order-net

  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGPORT: 5433
    ports:
      - "5433:5433"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    networks:
      - order-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5433/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    command:
      - "start-dev"
    ports:
      - '9696:8080'
    networks:
      - order-net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - order-net

volumes:
  postgres-data:

networks:
  order-net:
    driver: bridge